{
	"info": {
		"_postman_id": "5af1a365-f339-4433-8e5a-53dc3507f1f1",
		"name": "CMDB",
		"description": "This application provides access, through a web interface, to some of the features provided by the [IMDB] website.\n\nContact Support:\n Email: A49751@alunos.isel.pt",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24320479"
	},
	"item": [
		{
			"name": "groups",
			"item": [
				{
					"name": "{group Id}",
					"item": [
						{
							"name": "delete group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "<Bearer Token>",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "aliquip consequat sed in",
											"description": "(Required) id of the group to delete"
										}
									]
								},
								"description": "Delete the group with the id given"
							},
							"response": [
								{
									"name": "Group deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to delete"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"est voluptate adipis\",\n  \"group\": {}\n}"
								},
								{
									"name": "User token is missing or invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to delete"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Group not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "edit group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "<Bearer Token>",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laboris culpa eli\",\n  \"description\": \"fugiat in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "aliquip consequat sed in",
											"description": "(Required) id of the group to get details"
										}
									]
								},
								"description": "Edit the name and description of a group"
							},
							"response": [
								{
									"name": "group edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"laboris culpa eli\",\n  \"description\": \"fugiat in\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to get details"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"est voluptate adipis\",\n  \"group\": {}\n}"
								},
								{
									"name": "User token is missing or invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"laboris culpa eli\",\n  \"description\": \"fugiat in\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to get details"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Group not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"laboris culpa eli\",\n  \"description\": \"fugiat in\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to get details"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "get a group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "<Bearer Token>",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "aliquip consequat sed in",
											"description": "(Required) id of the group to get details"
										}
									]
								},
								"description": "Get details of the group with that id"
							},
							"response": [
								{
									"name": "group found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to get details"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"est voluptate adipis\",\n  \"group\": {}\n}"
								},
								{
									"name": "User token is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to get details"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Group not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to get details"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "add movie to group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "<Bearer Token>",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"movieId\": \"ut aliquip dolore Lorem\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "aliquip consequat sed in",
											"description": "(Required) id of the group to add movie to"
										}
									]
								},
								"description": "Add a movie to a group"
							},
							"response": [
								{
									"name": "Movie added",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movieId\": \"ut aliquip dolore Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to add movie to"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"est voluptate adipis\",\n  \"group\": {}\n}"
								},
								{
									"name": "Invalid group name or movie id",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movieId\": \"ut aliquip dolore Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to add movie to"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "User token is missing or invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movieId\": \"ut aliquip dolore Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to add movie to"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Group not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movieId\": \"ut aliquip dolore Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group to add movie to"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "remove movie from group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "<Bearer Token>",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:groupId/:movieId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":groupId",
										":movieId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "aliquip consequat sed in",
											"description": "(Required) id of the group with the movie to delete"
										},
										{
											"key": "movieId",
											"value": "movieId,ut aliquip dolore Lorem",
											"description": "(Required) id of movie to remove"
										}
									]
								},
								"description": "Removes a movie from a group"
							},
							"response": [
								{
									"name": "Movie deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId/:movieId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId",
												":movieId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group with the movie to delete"
												},
												{
													"key": "movieId",
													"value": "movieId,ut aliquip dolore Lorem",
													"description": "(Required) id of movie to remove"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"est voluptate adipis\",\n  \"group\": {}\n}"
								},
								{
									"name": "Invalid group name or movie id",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId/:movieId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId",
												":movieId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group with the movie to delete"
												},
												{
													"key": "movieId",
													"value": "movieId,ut aliquip dolore Lorem",
													"description": "(Required) id of movie to remove"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "User token is missing or invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId/:movieId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId",
												":movieId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group with the movie to delete"
												},
												{
													"key": "movieId",
													"value": "movieId,ut aliquip dolore Lorem",
													"description": "(Required) id of movie to remove"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Movie or Group not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											},
											{
												"key": "Authorization",
												"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId/:movieId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId",
												":movieId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "aliquip consequat sed in",
													"description": "(Required) id of the group with the movie to delete"
												},
												{
													"key": "movieId",
													"value": "movieId,ut aliquip dolore Lorem",
													"description": "(Required) id of movie to remove"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "get all groups",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						},
						"description": "list of all groups"
					},
					"response": [
						{
							"name": "all groups found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									},
									{
										"key": "Authorization",
										"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"au\",\n  \"groups\": [\n    {\n      \"groupId\": \"aliquip id quis Ut\",\n      \"name\": \"laboris commodo pariatur esse aliquip\",\n      \"description\": \"velit sint\",\n      \"nºmovies\": \"quis aliquip ex\"\n    },\n    {\n      \"groupId\": \"reprehenderit mollit ut comm\",\n      \"name\": \"officia ullamco\",\n      \"description\": \"Excepteur mollit in fugiat\",\n      \"nºmovies\": \"veniam in nisi\"\n    }\n  ]\n}"
						},
						{
							"name": "User token is missing or invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									},
									{
										"key": "Authorization",
										"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "create group",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"laboris culpa eli\",\n  \"description\": \"fugiat in\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						},
						"description": "create a group with a provided name and description"
					},
					"response": [
						{
							"name": "Group created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									},
									{
										"key": "Authorization",
										"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laboris culpa eli\",\n  \"description\": \"fugiat in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"est voluptate adipis\",\n  \"group\": {}\n}"
						},
						{
							"name": "Invalid input, object invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									},
									{
										"key": "Authorization",
										"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laboris culpa eli\",\n  \"description\": \"fugiat in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "User token is missing or invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									},
									{
										"key": "Authorization",
										"value": "urn:uuid:375535b4-ac7b-cbf0-8847-34dd162fa94a"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laboris culpa eli\",\n  \"description\": \"fugiat in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "get most popular movies",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/topMovies?limit=94",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"topMovies"
					],
					"query": [
						{
							"key": "limit",
							"value": "94",
							"description": "maximum number of popular movies to return"
						}
					]
				},
				"description": "By passing in the number of movies, you get the x most popular movies"
			},
			"response": [
				{
					"name": "Most popular movies found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/topMovies?limit=94",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"topMovies"
							],
							"query": [
								{
									"key": "limit",
									"value": "94"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"mollit qui\",\n  \"movies\": [\n    {\n      \"id\": \"cillum pariatur id minim in\",\n      \"rank\": \"voluptate elit qui ex\",\n      \"title\": \"voluptate\",\n      \"year\": \"consectetur\",\n      \"imDbRating\": \"est incididunt fugiat id tempor\"\n    },\n    {\n      \"id\": \"commodo nisi\",\n      \"rank\": \"ex do reprehenderit ipsum veniam\",\n      \"title\": \"laborum officia elit sunt Excepteur\",\n      \"year\": \"incididunt consequat nulla\",\n      \"imDbRating\": \"pariatur\"\n    }\n  ]\n}"
				},
				{
					"name": "Invalid max number of movies",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/topMovies?limit=94",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"topMovies"
							],
							"query": [
								{
									"key": "limit",
									"value": "94"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				},
				{
					"name": "IMDb API is not responding",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/topMovies?limit=94",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"topMovies"
							],
							"query": [
								{
									"key": "limit",
									"value": "94"
								}
							]
						}
					},
					"status": "Bad Gateway",
					"code": 502,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"value\": \"reference #/components/schemas/InvalidRequest not found in the OpenAPI spec\"\n}"
				}
			]
		},
		{
			"name": "get movies by name",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/searchMovie/:movieName?limit=94",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"searchMovie",
						":movieName"
					],
					"query": [
						{
							"key": "limit",
							"value": "94",
							"description": "maximum number of movies to return"
						}
					],
					"variable": [
						{
							"key": "movieName",
							"value": "aliquip consequat sed in",
							"description": "(Required) name of the movie to be searched"
						}
					]
				},
				"description": "By passing in a name, you get the movies that have that name"
			},
			"response": [
				{
					"name": "Movies found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/searchMovie/:movieName?limit=94",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"searchMovie",
								":movieName"
							],
							"query": [
								{
									"key": "limit",
									"value": "94"
								}
							],
							"variable": [
								{
									"key": "movieName",
									"value": "aliquip consequat sed in",
									"description": "(Required) name of the movie to be searched"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"officia in veniam velit\",\n  \"movies\": [\n    {\n      \"id\": \"aute pariatur\",\n      \"title\": \"Lorem aute deserunt v\"\n    },\n    {\n      \"id\": \"nisi\",\n      \"title\": \"Duis dolore sunt\"\n    }\n  ]\n}"
				},
				{
					"name": "Invalid max number of movies",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/searchMovie/:movieName?limit=94",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"searchMovie",
								":movieName"
							],
							"query": [
								{
									"key": "limit",
									"value": "94"
								}
							],
							"variable": [
								{
									"key": "movieName",
									"value": "aliquip consequat sed in",
									"description": "(Required) name of the movie to be searched"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				},
				{
					"name": "No movies found for the name",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/searchMovie/:movieName?limit=94",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"searchMovie",
								":movieName"
							],
							"query": [
								{
									"key": "limit",
									"value": "94"
								}
							],
							"variable": [
								{
									"key": "movieName",
									"value": "aliquip consequat sed in",
									"description": "(Required) name of the movie to be searched"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				},
				{
					"name": "IMDb API is not responding",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/searchMovie/:movieName?limit=94",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"searchMovie",
								":movieName"
							],
							"query": [
								{
									"key": "limit",
									"value": "94"
								}
							],
							"variable": [
								{
									"key": "movieName",
									"value": "aliquip consequat sed in",
									"description": "(Required) name of the movie to be searched"
								}
							]
						}
					},
					"status": "Bad Gateway",
					"code": 502,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				}
			]
		},
		{
			"name": "create new user",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userName\": \"dolor consectetur laborum\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user"
					]
				},
				"description": "Create a new user"
			},
			"response": [
				{
					"name": "User created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"dolor consectetur laborum\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"ullamco exercitation cupidatat commodo\",\n  \"user\": {}\n}"
				},
				{
					"name": "Invalid username",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"dolor consectetur laborum\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}